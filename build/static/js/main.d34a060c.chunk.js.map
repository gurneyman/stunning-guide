{"version":3,"sources":["components/GlobalErrorBoundary/index.js","components/Header/index.js","components/Layout/index.js","components/HomeSelection/HomeSelectionSchema.js","api/index.js","components/HomeSelection/index.js","components/PersonalInfo/PersonalInfoSchema.js","components/PersonalInfo/index.js","components/Confirmation/index.js","App.js","serviceWorker.js","index.js"],"names":["GlobalErrorBoundary","props","state","hasError","error","info","this","setState","console","log","children","React","Component","Header","className","fontSize","Layout","object","shape","houseSelection","string","required","roomSelection","numPersons","moveInDate","termLength","fetchJson","url","a","async","fetch","res","json","data","useStyles","makeStyles","theme","root","padding","spacing","control","margin","width","formHookOptions","validationSchema","HomeSelectionSchema","HomeSelection","history","useHistory","useState","housingOptions","setHousingOptions","roomOptions","setRoomOptions","homeId","setHomeId","room","setRoom","setNumPersons","Date","setMoveInDate","setTermLength","classes","useForm","register","handleSubmit","errors","errorList","Object","keys","useEffect","then","Paper","length","onSubmit","localStorage","setItem","JSON","stringify","push","Typography","variant","component","FormControl","InputLabel","id","NativeSelect","value","onChange","e","newHomeId","target","newHome","find","home_id","parseInt","newRoomOptions","available_rooms","labelid","inputProps","name","inputRef","disabled","map","home","key","apartment_name","label","defaultValue","utils","MomentUtils","KeyboardButtonProps","Button","type","color","style","firstName","lastName","email","phone","PersonalInfoSchema","PersonalInfo","setFirstName","setLastName","setEmail","setPhone","homeInfo","setHomeInfo","parse","getItem","TextField","innerRef","personalInfo","setPersonalInfo","App","CssBaseline","exact","path","Confirmation","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d34a060c.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class GlobalErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { hasError: false };\n    }\n  \n    componentDidCatch(error, info) {\n      this.setState({ hasError: true });\n      console.log(error, info);\n    }\n  \n    render() {\n      if (this.state.hasError) {\n        return <h1>Something went wrong.</h1>;\n      }\n      return this.props.children;\n    }\n  }","import React from \"react\";\nimport HomeWorkIcon from '@material-ui/icons/HomeWork';\n\n\n\nimport './Header.css';\n\nexport default function Header() {\n  return (\n    <header className=\"App-header vertical-rhythm\">\n      <h1 className=\"App-header__title\">\n        <HomeWorkIcon fontSize='large' />&nbsp;\n        <span>Housing Application</span>\n      </h1>\n    </header>\n  );\n}\n","import React from \"react\";\nimport Header from \"../Header\";\n\nimport \"./Layout.css\";\n\nexport default function Layout({ children }) {\n  return (\n    <header className=\"vertical-rhythm--xl\">\n      <Header />\n      <main>{children}</main>\n    </header>\n  );\n}\n","import { string, object } from \"yup\";\n\nexport default object().shape({\n    houseSelection: string()\n    .required(),\n    roomSelection: string()\n    .required(),\n    numPersons: string()\n    .required(),\n    moveInDate: string()\n    .required(),\n    termLength: string()\n    .required(),\n});","\nasync function fetchJson(url) {\n  try {\n    const res = await fetch(url);\n    return await res.json();\n  } catch(e) {\n    console.log(e);\n    return { data: [] };\n  }\n}\n\nexport async function fetchHousingOptions() {\n  return fetchJson(\"https://api.jsonbin.io/b/5cdb03f94fc34d41690069c5\");\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper, Typography, Button, NativeSelect, FormControl, InputLabel } from \"@material-ui/core\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport useForm from \"react-hook-form\";\nimport { find } from \"lodash\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Layout from \"../Layout\";\nimport HomeSelectionSchema from \"./HomeSelectionSchema\";\nimport { fetchHousingOptions } from \"../../api\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  control: {\n    margin: theme.spacing(1, 0),\n    width: \"100%\"\n  }\n}));\n\nconst formHookOptions = {\n  validationSchema: HomeSelectionSchema\n};\n\nexport default function HomeSelection() {\n  const history = useHistory();\n  const [housingOptions, setHousingOptions] = useState([]);\n  const [roomOptions, setRoomOptions] = useState([]);\n  const [homeId, setHomeId] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [numPersons, setNumPersons] = useState(1);\n  const [moveInDate, setMoveInDate] = useState(new Date());\n  const [termLength, setTermLength] = useState(1);\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm(formHookOptions);\n  const errorList = Object.keys(errors);\n\n  useEffect(() => {\n    fetchHousingOptions().then(setHousingOptions);\n  }, []);\n\n  function onHousingOptionChange(e) {\n    const newHomeId = e.target.value;\n    if (!newHomeId) {\n      return;\n    }\n    setHomeId(newHomeId);\n    const newHome = find(housingOptions, { home_id: parseInt(newHomeId, 10) });\n    const newRoomOptions = newHome && newHome.available_rooms;\n\n    setRoomOptions(newRoomOptions);\n    setRoom(newRoomOptions[0]);\n  }\n\n  function onSubmit(data) {\n    localStorage.setItem('home-info', JSON.stringify(data));\n    history.push('personal-info');\n  }\n\n  return (\n    <Layout>\n      <Paper className={classes.root}>\n        {housingOptions.length > 0 ? (\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)} className=\"vertical-rhythm\">\n              <Typography variant=\"h5\" component=\"h3\">\n                Please enter housing selections\n              </Typography>\n              <FormControl className={classes.control}>\n                <InputLabel id=\"home-label\">Home</InputLabel>\n                <NativeSelect\n                  value={homeId}\n                  onChange={onHousingOptionChange}\n                  labelid=\"home-label\"\n                  inputProps={{\n                    name: \"houseSelection\",\n                    id: \"house-selection\"\n                  }}\n                  inputRef={register}\n                  disabled={housingOptions && housingOptions.length < 1}\n                  className=\"full-width\"\n                >\n                  <option value=\"\" />\n                  {housingOptions &&\n                    housingOptions.map(home => (\n                      <option value={home.home_id} key={home.home_id}>\n                        {home.apartment_name}\n                      </option>\n                    ))}\n                </NativeSelect>\n              </FormControl>\n              <FormControl className={classes.control}>\n              <InputLabel id=\"room-label\">Room</InputLabel>\n                <NativeSelect\n                  value={room}\n                  onChange={e => setRoom(e.target.value)}\n                  labelid=\"room-label\"\n                  inputProps={{\n                    name: \"roomSelection\",\n                    id: \"room-selection\"\n                  }}\n                  inputRef={register}\n                  disabled={roomOptions && roomOptions.length < 1}\n                  className=\"full-width\"\n                >\n                  <option value=\"\" />\n                  {roomOptions &&\n                    roomOptions.map(room => (\n                      <option value={room} key={room}>\n                        {room}\n                      </option>\n                    ))}\n                </NativeSelect>\n              </FormControl>\n              <FormControl className={classes.control}>\n              <InputLabel id=\"num-persons-label\">Number of Persons</InputLabel>\n                <NativeSelect\n                  value={numPersons}\n                  label=\"Number of Persons\"\n                  labelid=\"num-persons-label\"\n                  onChange={e => setNumPersons(e.target.value)}\n                  inputProps={{\n                    name: \"numPersons\",\n                    id: \"num-persons-selection\"\n                  }}\n                  inputRef={register}\n                  className=\"full-width\"\n                >\n                  <option value=\"1\" defaultValue>\n                    1\n                  </option>\n                  <option value=\"2\">2</option>\n                </NativeSelect>\n              </FormControl>\n              <FormControl className={classes.control}>\n                <MuiPickersUtilsProvider utils={MomentUtils} className=\"full-width\">\n                  <KeyboardDatePicker\n                    margin=\"normal\"\n                    id=\"move-in-date\"\n                    label=\"Move-in date\"\n                    name=\"moveInDate\"\n                    value={moveInDate}\n                    onChange={setMoveInDate}\n                    KeyboardButtonProps={{\n                      \"aria-label\": \"change date\"\n                    }}\n                    inputRef={register}\n                    className=\"full-width\"\n                  />\n                </MuiPickersUtilsProvider>\n              </FormControl>\n              <FormControl className={classes.control}>\n              <InputLabel id=\"term-length-label\">Term Length</InputLabel>\n                <NativeSelect\n                  value={termLength}\n                  onChange={e => setTermLength(e.target.value)}\n                  labelid=\"term-length-label\"\n                  inputProps={{\n                    name: \"termLength\",\n                    id: \"term-length-selection\"\n                  }}\n                  inputRef={register}\n                >\n                  <option value=\"1\" defaultValue>\n                    1 month\n                  </option>\n                  <option value=\"6\">6 months</option>\n                  <option value=\"12\">12 months</option>\n                </NativeSelect>\n              </FormControl>\n              <div>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={errorList.length > 0}\n                >\n                  Continue\n                </Button>\n              </div>\n            </form>\n            <div style={{ color: \"red\" }}>\n              <pre>\n                {errorList.length > 0 && (\n                  <label>Errors: {JSON.stringify(errors, null, 2)}</label>\n                )}\n              </pre>\n            </div>\n          </div>\n        ) : (\n          \"Loading...\"\n        )}\n      </Paper>\n    </Layout>\n  );\n}\n","import { string, object} from \"yup\";\n\nexport default object().shape({\n    firstName: string()\n    .required(),\n    lastName: string()\n    .required(),\n    email: string().email()\n    .required(),\n    phone: string()\n    .required()\n});","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper, Typography, Button, FormControl, TextField } from \"@material-ui/core\";\nimport useForm from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Layout from \"../Layout\";\nimport PersonalInfoSchema from \"./PersonalInfoSchema\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  control: {\n    margin: theme.spacing(1, 0),\n    width: \"100%\"\n  }\n}));\n\nconst formHookOptions = {\n  validationSchema: PersonalInfoSchema\n};\n\nexport default function PersonalInfo() {\n  const history = useHistory();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [homeInfo, setHomeInfo ] = useState(null);\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm(formHookOptions);\n  const errorList = Object.keys(errors);\n\n  useEffect(() => {\n    setHomeInfo(JSON.parse(localStorage.getItem('home-info')));\n  }, []);\n\n  function onSubmit(data) {\n    localStorage.setItem('personal-info', JSON.stringify(data));\n    history.push('confirmation');\n  }\n\n  if(!homeInfo) {\n    return (\n      <Layout>\n        <div>Must enter home info first.</div>\n      </Layout>\n    );\n  }\n  return (\n    <Layout>\n      <Paper className={classes.root}>\n            <form onSubmit={handleSubmit(onSubmit)} className=\"vertical-rhythm\">\n              <Typography variant=\"h5\" component=\"h3\">\n                Please enter Personal Info\n              </Typography>\n              <FormControl className={classes.control}>\n                <TextField id=\"first-name\" name=\"firstName\" value={firstName} label=\"First Name\" onChange={(e) => setFirstName(e.target.value)} innerRef={register}/>\n              </FormControl>\n              <FormControl className={classes.control}>\n                <TextField id=\"last-name\" name=\"lastName\" value={lastName} label=\"Last Name\" onChange={(e) => setLastName(e.target.value)} innerRef={register}/>\n              </FormControl>\n              <FormControl className={classes.control}>\n                <TextField id=\"email\" name=\"email\" type=\"email\" value={email} label=\"Email\" onChange={(e) => setEmail(e.target.value)} innerRef={register}/>\n              </FormControl>\n              <FormControl className={classes.control}>\n                <TextField id=\"phone\" name=\"phone\" type=\"phone\" value={phone} label=\"phone\" onChange={(e) => setPhone(e.target.value)} innerRef={register}/>\n              </FormControl>\n              <div>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={errorList.length > 0}\n                >\n                  Continue\n                </Button>\n              </div>\n            </form>\n            <div style={{ color: \"red\" }}>\n              <pre>\n                {errorList.length > 0 && (\n                  <label>Errors: {JSON.stringify(errors, null, 2)}</label>\n                )}\n              </pre>\n            </div>\n          </Paper>\n    </Layout>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Paper, Typography } from \"@material-ui/core\";\n\nimport Layout from \"../Layout\";\n\nexport default function PersonalInfo() {\n  const [homeInfo, setHomeInfo] = useState(null);\n  const [personalInfo, setPersonalInfo] = useState(null);\n\n  useEffect(() => {\n    setHomeInfo(JSON.parse(localStorage.getItem(\"home-info\")));\n    setPersonalInfo(JSON.parse(localStorage.getItem(\"personal-info\")));\n  }, []);\n\n  if (!homeInfo || !personalInfo) {\n    return (\n      <Layout>\n        <div>Must complete other steps first.</div>\n      </Layout>\n    );\n  }\n  return (\n    <Layout>\n      <Paper>\n        <Typography variant=\"h5\" component=\"h2\">\n          Confirmation\n        </Typography>\n        <Typography variant=\"h5\" component=\"h3\">\n          Home Info\n        </Typography>\n        <pre>{JSON.stringify(homeInfo, null, 2)}</pre>\n        <Typography variant=\"h5\" component=\"h3\">\n          Personal Info\n        </Typography>\n        <pre>{JSON.stringify(personalInfo, null, 2)}</pre>\n      </Paper>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport \"./App.css\";\nimport GlobalErrorBoundary from \"./components/GlobalErrorBoundary\";\nimport HomeSelection from \"./components/HomeSelection\";\nimport PersonalInfo from \"./components/PersonalInfo\";\nimport Confirmation from \"./components/Confirmation\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <GlobalErrorBoundary>\n        <Router>\n          <Switch>\n            <Route exact path=\"/confirmation\" component={Confirmation} />\n            <Route exact path=\"/personal-info\" component={PersonalInfo} />\n            <Route exact path=\"/\" component={HomeSelection} />\n          </Switch>\n        </Router>\n      </GlobalErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}